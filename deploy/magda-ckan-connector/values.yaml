global:
  image: {}
  connectors:
    image: {}
  openfaas: {}

# image setting loadding order: (from higher priority to lower priority)
# - Values.image.x
# - Values.global.connectors.image.x
# - Values.defaultImage.x
# You can set `imagePullSecret` value to `false` (bool) to reset the value (see example below)

image: 
  name: "magda-ckan-connector"
  # repository: 
  # tag: 
  # pullPolicy: 
  # imagePullSecret: 

defaultImage:
  repository: ghcr.io/magda-io
  pullPolicy: IfNotPresent
  imagePullSecret: false

createFunction: false
createConfigMap: true

resources:
  requests:
    cpu: 50m
    memory: 30Mi
  limits:
    cpu: 100m

# -- defaultSettings
# Chart level .Values.includeInitialJobs is higher priority than 
# .Values.global.includeInitialJobs
# The value of includeInitialJobs or includeCronJobs is determined by:
# - .Values.includeInitialJobs if its value is set
# - Then .Values.global.includeInitialJobs if its value is set
# - Then .Values.defaultSettings.includeInitialJobs
# By default, .Values.includeInitialJobs is not set. 
# Therefore, if .Values.global.includeInitialJobs is not set, .Values.defaultSettings.includeInitialJobs will be used.
defaultSettings:
  includeInitialJobs: false
  includeCronJobs: true


# -- see `defaultSettings`
includeInitialJobs:
# -- see `defaultSettings`
includeCronJobs: true

defaultTenantId: 0

config:
  # -- Unique id to identify this connector and records that are harvested from it
  id: dga
  # -- Friendly readable name
  name: "data.gov.au"
  # -- The base URL of the place to source data from
  sourceUrl: "https://data.gov.au/data/"
  # -- When crawling through from beginning to end, how big should the individual requests be in records?
  pageSize: 100
  
  # -- Crontab schedule for how often this should happen.
  # default = "0 14 * * 6" i.e. 12am Sydney time on Sunday
  schedule: ""

  # -- CKAN-specific config: what harvest sources to ignore. * will ignore everything that's been harvested
  # from another portal
  ignoreHarvestSources: ["*"]

  # -- allowOrganisationNames: a list of organisation names that will be allowed to be harvested.
  # should an array of string;
  allowedOrganisationNames: 
  
  # -- ignoreOrganisationNames: a list of organisation names that will be ignored to be harvested.
  # should an array of string;
  ignoreOrganisationNames: 

  # -- extras: an object whose data will be copied to records' source aspect as additional data automatically
  # should be an object with key-value pairs
  extras:

  # -- Any aspects that will be `preset` on any records created by the connector
  #  This field should be an array of objects with the following fields:
  #  
  #  - `id`: aspect id 
  #  - `opType`: operation type; Describe how to add the aspect to the record (Default value (If not specified) will be `MERGE_LEFT`)
  #    - MERGE_LEFT: merge `presetAspect` with records aspects.
  #      - i.e. `presetAspect` will be overwritten by records aspects data if any
  #    - MEREG_RIGHT: merge records aspects with `presetAspect`.
  #      - i.e. records aspects data (if any) will be overwritten by `presetAspect`
  #    - REPLACE: `presetAspect` will replace any existing records aspect
  #    - FILL: `presetAspect` will be added if no existing aspect
  #
  #  - `recordType``: Describes which type of records this aspect will be added to;
  #  If this field is omitted, the aspect will be added to every records.
  #
  #  - `data`: Object; aspect data
  presetRecordAspects: 

  # -- Custome JS filter code to filter out records
  # the code will be executed with the following variables available in the context:
  # - jsonData: the rawJson record data retrieved by connector directly from remote API. Also the record to be filtered;
  # - recordType: a string represent the type of the record. e.g. "Organization" | "Dataset" | "Distribution"
  # the code should return a boolean value to indicate whether the record should be filtered out (true) or not (false)
  # Any non-false return value (or no return value) will be treated as `false`
  customJsFilterCode: ""


# -- Set a list of secrets that pass to function (this config field is only for deploying connector code as openfaas functions)
# Secrets are accessible from `/var/openfaas/secrets/<secret-name>` as file
secrets:
# - secret-name-1
# - secret-name-2